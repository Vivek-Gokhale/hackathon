{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-24T17:19:09.232Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-24T17:19:09.235Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-24T17:19:09.239Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T02:01:43.762Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T02:01:43.780Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T02:01:43.791Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T02:02:26.323Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T02:02:26.327Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T02:02:26.333Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T02:22:38.920Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T02:22:38.924Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T02:22:38.930Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:01:47.522Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:01:47.526Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:01:47.530Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:06:46.520Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:06:46.524Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:06:46.528Z"}
{"level":"error","message":"Error registering farmer Cannot destructure property 'email' of 'req.body' as it is undefined.","stack":"TypeError: Cannot destructure property 'email' of 'req.body' as it is undefined.\n    at registerFarmer (D:\\hackathon\\backend\\controllers\\farmerController.js:69:17)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T03:10:12.001Z"}
{"level":"error","message":"TypeError: Cannot destructure property 'email' of 'req.body' as it is undefined.\n    at registerFarmer (D:\\hackathon\\backend\\controllers\\farmerController.js:69:17)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T03:10:12.006Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:11:14.214Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:11:14.219Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:11:14.226Z"}
{"level":"error","message":"Error registering farmer Cannot destructure property 'email' of 'req.body' as it is undefined.","stack":"TypeError: Cannot destructure property 'email' of 'req.body' as it is undefined.\n    at registerFarmer (D:\\hackathon\\backend\\controllers\\farmerController.js:69:17)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T03:11:18.357Z"}
{"level":"error","message":"TypeError: Cannot destructure property 'email' of 'req.body' as it is undefined.\n    at registerFarmer (D:\\hackathon\\backend\\controllers\\farmerController.js:69:17)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\hackathon\\backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\hackathon\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\hackathon\\backend\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\hackathon\\backend\\node_modules\\router\\index.js:582:12)\n    at next (D:\\hackathon\\backend\\node_modules\\router\\index.js:291:5)\n    at Function.handle (D:\\hackathon\\backend\\node_modules\\router\\index.js:186:3)","timestamp":"2025-05-25T03:11:18.363Z"}
{"level":"error","message":"Error sending password reset email to","timestamp":"2025-05-25T03:15:59.344Z"}
{"code":"EAUTH","command":"API","level":"error","message":"Error requesting password reset Missing credentials for \"PLAIN\"","stack":"Error: Missing credentials for \"PLAIN\"\n    at SMTPConnection._formatError (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n    at SMTPConnection.login (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:454:38)\n    at D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-transport\\index.js:272:32\n    at SMTPConnection.<anonymous> (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:215:17)\n    at Object.onceWrapper (node:events:633:28)\n    at SMTPConnection.emit (node:events:519:28)\n    at SMTPConnection._actionEHLO (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1371:14)\n    at SMTPConnection._processResponse (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n    at SMTPConnection._onData (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n    at SMTPConnection._onSocketData (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)","timestamp":"2025-05-25T03:15:59.349Z"}
{"level":"error","message":"Error: Missing credentials for \"PLAIN\"\n    at SMTPConnection._formatError (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n    at SMTPConnection.login (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:454:38)\n    at D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-transport\\index.js:272:32\n    at SMTPConnection.<anonymous> (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:215:17)\n    at Object.onceWrapper (node:events:633:28)\n    at SMTPConnection.emit (node:events:519:28)\n    at SMTPConnection._actionEHLO (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1371:14)\n    at SMTPConnection._processResponse (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n    at SMTPConnection._onData (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n    at SMTPConnection._onSocketData (D:\\hackathon\\backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)","timestamp":"2025-05-25T03:15:59.355Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:17:33.175Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:17:33.180Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:17:33.184Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:17:44.108Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:19:47.179Z"}
{"level":"error","message":"SyntaxError: Expected double-quoted property name in JSON at position 60\n    at JSON.parse (<anonymous>)\n    at parse (D:\\hackathon\\backend\\node_modules\\body-parser\\lib\\types\\json.js:77:19)\n    at D:\\hackathon\\backend\\node_modules\\body-parser\\lib\\read.js:123:18\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at invokeCallback (D:\\hackathon\\backend\\node_modules\\raw-body\\index.js:238:16)\n    at done (D:\\hackathon\\backend\\node_modules\\raw-body\\index.js:227:7)\n    at IncomingMessage.onEnd (D:\\hackathon\\backend\\node_modules\\raw-body\\index.js:287:7)\n    at IncomingMessage.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1696:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-05-25T03:20:20.322Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:23:12.471Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:23:12.475Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:23:12.480Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:23:26.842Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:23:26.845Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:23:26.849Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:24:00.214Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:25:11.584Z"}
{"level":"info","message":"MongoDB Atlas connection successful","timestamp":"2025-05-25T03:29:22.897Z"}
{"level":"info","message":"Connected to MongoDB Atlas","timestamp":"2025-05-25T03:29:22.901Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-05-25T03:29:22.905Z"}
{"level":"info","message":"Password reset email sent successfully to","timestamp":"2025-05-25T03:29:34.042Z"}
